/*!
 * broadcast-events.js v1.0.0
 * @description A simple way to broadcast JavaScript events across iframes.
 * @see {@link https://github.com/orca-scan/broadcast-event}
 * @author Orca Scan <orcascan.com>
 * @license MIT
 */
!function(e){"use strict";if("function"!=typeof e.CustomEvent)throw new Error("Missing CustomEvent polyfill");var t=e.location.href,n=d(t+":"+performance.now()+":"+Math.random()),o=!0,r={};function a(a,c,f){if(f=f||{},-1===(a=String(a||"")||"").indexOf(":"))throw new Error("eventName must be namespaced with :");o=!0===f.debug;var u={type:a,detail:c,eventIds:f._eventIds||[],originId:f._originId||n};if(!function(e){var n=Date.now(),o=n-3e4;if(Object.keys(r).forEach(function(e){r[e]<o&&delete r[e]}),e.eventIds.some(function(e){return void 0!==r[e]}))return i('suppressed "'+e.type+'"'),!0;var a=d(t+":"+e.type+":"+performance.now()+":"+Math.random());return e.eventIds.push(a),r[a]=n,!1}(u)){e.dispatchEvent(new CustomEvent(a,c)),e.parent!==e&&(s(e.parent,u),i('sending "'+u.type+'" up'));for(var p=0,v=e.frames.length;p<v;p++)s(e.frames[p],u),i('sending "'+u.type+'" down')}}function i(){if(o){var e=[].slice.call(arguments),n=["broadcast-event["+t+"]"].concat(e);console.log.apply(console,n)}}function s(t,n){if(t!==e)try{t.postMessage({_broadcast:n},"*")}catch(e){}}function d(e){for(var t=2166136261,n=0;n<e.length;n++)t^=e.charCodeAt(n),t+=(t<<1)+(t<<4)+(t<<7)+(t<<8)+(t<<24);return Math.abs(t>>>0).toString(36)}e.addEventListener("message",function(t){if(t.source!==e){var n=t.data&&t.data._broadcast;if(n&&"string"==typeof n.type&&n.originId){i('received "'+n.type+'"');var r={_originId:n.originId,_eventIds:n.eventIds,debug:!0===o};a(n.type,n.detail,r)}}}),"undefined"!=typeof module&&module.exports?module.exports=a:e.broadcastEvent=a}(this);