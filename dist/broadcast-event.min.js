/*!
 * broadcast-events.js v1.4.0
 * @description A simple way to fire JavaScript events across iframes.
 * @see {@link https://github.com/orca-scan/broadcast-event}
 * @author Orca Scan <orcascan.com>
 * @license MIT
 */
!function(e){"use strict";if("function"!=typeof e.CustomEvent)throw new Error("Missing CustomEvent polyfill");var t=e.location.href,r=d(t+":"+Date.now()+":"+1e18*Math.random()),n={};function a(a,s,c){if(s&&"object"!=typeof s)throw new Error("eventData must be an object");a=String(a||"")||"",s=s||{},(c=c||{}).debug=!0===c.debug,s._originId||(s._originId=r),s._targetId=s._targetId||c.target;var u={type:a,detail:s,eventIds:c._eventIds||[],debug:c.debug};if(function(e){var r=Date.now(),a=r-3e4;if(Object.keys(n).forEach(function(e){n[e]<a&&delete n[e]}),e.eventIds.some(function(e){return void 0!==n[e]}))return!0;var o=d(t+":"+e.type+":"+performance.now()+":"+Math.random());return e.eventIds.push(o),n[o]=r,!1}(u))c.debug&&o('suppressed "'+u.type+'"');else{if(s._targetId&&s._targetId!==r||e.dispatchEvent(new CustomEvent(a,{detail:s})),c.encrypt){var f=JSON.stringify(s),l=s._originId;u.detail="BE:"+function(e,t){if(!t)throw new Error("Encryption key is required");for(var r=[],n=0;n<e.length;n++){var a=t.charCodeAt(n%t.length),o=e.charCodeAt(n)^a^n%256;r.push(String.fromCharCode(o))}return btoa(r.join(""))}(f,l)+":"+l}e.parent!==e&&(i(e.parent,u),c.debug&&o('sending "'+u.type+'" up'));for(var g=0,p=e.frames.length;g<p;g++)i(e.frames[g],u),c.debug&&o('sending "'+u.type+'" down')}}function o(){var e=[].slice.call(arguments),r=["broadcast-event["+t+"]"].concat(e);console.log.apply(console,r)}function i(t,r){if(t!==e)try{t.postMessage({_broadcast:r},"*")}catch(e){}}function d(e){for(var t=2166136261,r=0;r<e.length;r++)t^=e.charCodeAt(r),t+=(t<<1)+(t<<4)+(t<<7)+(t<<8)+(t<<24);return Math.abs(t>>>0).toString(36)}e.addEventListener("message",function(r){if(r.source!==e){var n=r.data&&r.data._broadcast;if(n&&"string"==typeof n.type&&n.detail){if(n.debug&&o('received "'+n.type+'"'),"string"==typeof n.detail&&0===n.detail.indexOf("BE:")){var i=n.detail.split(":"),d=(i[0],function(e,t){if(!t)throw new Error("Decryption key is required");for(var r=atob(e),n=[],a=0;a<r.length;a++){var o=t.charCodeAt(a%t.length),i=r.charCodeAt(a)^o^a%256;n.push(String.fromCharCode(i))}return n.join("")}(i[1]||"",i[2]||""));try{n.detail=JSON.parse(d)}catch(e){!function(){var e=[].slice.call(arguments),r=["broadcast-event["+t+"]"].concat(e);console.warn.apply(console,r)}("Unable to decrypt eventData"),n.detail=null}}var s={_eventIds:n.eventIds,debug:n.debug,target:n.target};a(n.type,n.detail,s)}}}),"undefined"!=typeof module&&module.exports?module.exports=a:e.broadcastEvent=a}(this);